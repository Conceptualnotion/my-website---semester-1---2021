@import url('https://fonts.googleapis.com/css2?family=Lexend:wght@400;500;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Mulish:ital,wght@1,500;1,700&display=swap');
/*@import url('https://fonts.googleapis.com/css2?family=Mulish:ital,wght@1,500&display=swap');*/

body {
    background-color: 99cc00;
    color: #000000;
    font-family: 'Lexend', sans-serif;
    /*    Ensure family and size are set in Body */
    /*    Arial is my default font, Helvetica is my fallback font. Both are sans-serif. */
    font-size: 16px;
    /*    This is the default font size and applies to the whole page. When I begin responsive css, I will adjust elements based on this font size I have set above in the Body */
}

/* Typography */
h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: 'Mulish', sans-serif;
    margin-bottom: 20px;
}

h1 {

    padding: 20px 0 20px 20px;
    padding-top: 20px;
    padding-bottom: 20px;
    display: inline-block;
    font-size: 35px;
    text-transform: none;
    letter-spacing: 2px;
    color: #6bb5d6;
}

h2 {
    text-transform: none;
    font-size: 2rem;
    font-weight: bold;
    border-bottom: 1px solid white;
    padding: 8px 0;
    letter-spacing: 1px;
    color: #6bb5d6;

}

h3 {
    font font-size: 1rem;
    padding: 4rem 0 2rem 0;
}

h4 {
    font-size: 1.5rem;
}

p,
ul {

    font-size: 18px;
    line-height: normal;
    margin-bottom: 10px;
    /*    When I  added my reset file in, I lost the space between the paragraphs, so margin-bottom restores this. */
}

figure,
figcaption {

    display: block;
    font-style: italic;
    font-variant: normal;
    text-align: center;

}


/* Anchor Styles */

a {
    color: white;

    text-decoration: none;
    /* no underline on Title and in-text links. */

}

main {
    margin: 0 auto;
    width: 960px;
}

main ul {
    font-size: 18px;
    list-style: disc;
}

main ul li {
    margin-left: 8rem;
}




a:hover {
    text-decoration: underline;
    /* underline when hovering over Title & in-text links for visual feedback. */

}

a:visited {
    color: blueviolet;
    /* Bright purple colour stands out to remind user of visited state. */


}

a:active {
    color: #6bb5d6;
    /*    Particularly good for mobile devices, only displays momentarily. Green matches primary navigation button colour.  */
}

/* Main Containers */

.wrapper {
    width: 1500px;
    /*    TOP RIGHT BOTTOM LEFT*/
    margin: 20px auto 0px auto;
}

header {

    padding: 36px;
}



nav {

    border: 5px solid: red;
}

nav ul {
    float: right;
    margin-bottom: auto;
}

nav ul li {
    display: inline;
    /* display: inline means that the element - is displayed inline, inside the current block on the same line, across the page, rather then vertically. https://stackoverflow.com/questions/3099030/displayinline-vs-displayblock */
    margin-right: 20px;
    /* Margin between button elements is 20px. */
    /* nav is positioned 20px from right edge. */


}

nav ul li a {
    color: black;
    /* nav menu button link text is black */
    text-decoration: none;
    /* removes underline */
    /* no background color necessary for button, except when hovered over - see below. This maintains minimalism and a clean design. */
    padding: 8px 13px;
    /* button padding dimensions appear when user hovers over link. */
    letter-spacing: 0.7px;
    /* Increases kerning or letter-spacing. I used a very compact typeface so this allows for some space between individual characters. */
}

nav ul li a:hover,
/* css pseudo element for button hover-state. A CSS pseudo-element is a keyword added to a selector that lets you style a specific part of the selected element(s). https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements */
nav ul li a.currentpage {
    background-color: #6bb5d6;
    /* This shade of green displays when user hovers over the anchor tag or button with their curser. Provides great visual feedback. */
    text-decoration: none;
    /*    over-rides css inheritance from previous underlined coding */
    color: white;
}

.hero {
    min-height: 350px;
    background-image: url(../images/churchill-house-13.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    background-color: #F5F5F5;
}

main {

    padding: 10px;
    overflow: auto;
}



footer {

    padding: 15px;
    /*    display: none;*/
    background-color: #F5F5F5;
    border-top: 1px solid #D6D6D6;
}

footer p {
    font-size: 75%;
}

.max-width-100-height-auto {
    max-width: 100%;
    height: auto;
}

/* I 'applied the width at 100% to get the image to become flexible within the container itself.  Remember that if an image is set to width: 100% on a container that occupies 70% of the viewport, then the image will occupy 70% of the viewport (but 100% of the container).' https://responsivedesign.is/guidelines/flexible-images-and-media/*/

/* The Container is 100% or the maximum screen resolution. 'Containers are used to pad the content inside of them'. https://www.w3schools.com/bootstrap4/bootstrap_containers.asp */

/* For a smart tv (3840px x 1920px), the original resolution of the image - (800px x 600px) - as viewed on my laptop 1920px x 1080px (see Robin Boyd Portrait tag on legacy.html) - will double or enlarge to 1600px x 1200px, whilst remaining in proportion to the rest of the dimensions of the web site. Similarly, the image will contract in proportion to the pages design when viewed on a smaller tablet or mobile device. */

.leftimg {
    /*    dot . because its a class */
    width: 40%;
    float: left;
    border: 1px solid grey;
    /* color of border outside line. */
    padding: 10px;
    /* width of the white border. */
    background-color: white;
    margin: 12px 30px;

}

.rightimg {
    width: 40%;
    float: right;
    border: 1px solid grey;
    padding: 10px;
    background-color: white;
    margin: 12px 38px;
}

.centerimg {
    width: 78.5%;
    float: center;
    border: 1px solid grey;
    padding: 10px;
    background-color: white;
    margin: 15px 80px;
    /* 15px margin leaves some space at the top of the image, below the back to top link. */
}
